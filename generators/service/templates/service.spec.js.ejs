describe('<%= moduleName %>: <%= serviceName %> service', () => {
  'use strict';

  describe('testing method', () => {
    it('should return "hello, world"', () => {
      const { $injector, <%= serviceName %> } = setup();
      // const exampleStub = spyOn($injector.get('exampleDependency'), 'method');

      // given

      // when
      const actual = <%= serviceName %>.method();

      // then
      expect(actual).toEqual('hello, world');
    });
  });

  function setup() {
    const setupVariables = {};

    common.globalBeforeWithUI();
    angular.mock.module('<%= moduleName %>');

    inject(($injector) =>
      _.assign(setupVariables, {
        $injector,
        $q: $injector.get('$q'),
        $rootScope: $injector.get('$rootScope'),
        $http: $injector.get('$http'),
        $httpBackend: $injector.get('$httpBackend'),
        <%= serviceName %>: $injector.get('<%= serviceName %>')
      })
    );

    return setupVariables;
  }
});

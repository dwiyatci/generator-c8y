(() => {
  'use strict';

  angular.module('<%= moduleName %>').directive('<%= widgetComponentName %>', chartWidget);

  function chartWidget(<%= widgetChartFactoryName %>) {
    'ngInject';

    const ddo = {
      restrict: 'E',
      templateUrl: ':::PLUGIN_PATH:::/widget.html',
      scope: {
        device: '<'
      },
      controllerAs: 'vm',
      controller: Controller,
      bindToController: true,
      link: linkFunc
    };

    return ddo;

    ////////////

    function linkFunc(scope, el) {
      const chart = <%= widgetChartFactoryName %>.create({
        container: el.find('.chart-container')
      });

      scope.$watch('vm.dataset', onDatasetChange, true);
      scope.$on('dashboardResize', onDashboardResize);

      ////////////

      function onDatasetChange(dataset) {
        if (dataset) {
          chart.clear();
          chart.drawDataset(_.cloneDeep(dataset));
        }
      }

      function onDashboardResize() {
        chart.redraw();
      }
    }
  }

  function Controller(<%= widgetDataServiceName %>) {
    'ngInject';

    const vm = this;

    activate();

    $scope.$watch('vm.device', onDeviceChange);

    ////////////

    function activate() {}

    function onDeviceChange(device) {
      if (device) {
        <%= widgetDataServiceName %>.getData({ source: deviceId }).then(dataset => {
          vm.dataset = dataset;
        });
      }
    }
  }
})();

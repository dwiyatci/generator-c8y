describe('<%= moduleName %>: <%= serviceName %> service', () => {
  'use strict';

  let $injector;
  let $rootScope;
  let $q;
  let $http;
  let $httpBackend;
  let <%= serviceName %>;

  beforeEach(() => {
    common.globalBeforeWithUI();
    module('<%= moduleName %>');

    inject((_$injector_) => {
      $injector = _$injector_;
      $rootScope = $injector.get('$rootScope');
      $q = $injector.get('$q');
      $http = $injector.get('$http');
      $httpBackend = $injector.get('$httpBackend');
      <%= serviceName %> = $injector.get('<%= serviceName %>');
    });
  });

  describe('testing method', () => {
    // let exampleStub;

    beforeEach(() => {
      //////////// stubbing dependencies

      // exampleStub = spyOn($injector.get('exampleDependency'), 'method');
    });

    it('should return "hello, world"', () => {
      // given

      // when
      const actual = <%= serviceName %>.method();

      // then
      expect(actual)
        .toEqual('hello, world');
    });
  });
});
